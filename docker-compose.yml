version: '3'
services:

  busybox:
    hostname: busybox
    image: "busybox:latest"
    restart: always
    command: sh -c "while true; do date; sleep 60; done"
    links:
      - influxdb2
    networks:
      - default

  influxdb2:
    hostname: influxdb2
    # https://hub.docker.com/_/influxdb
    image: "influxdb:2.6"
    volumes:
      # Mount for influxdb data directory
      - ./volumes/influxdb2/var/lib/influxdb2/:/var/lib/influxdb2/
      # Mount for influxdb configuration
      - ./volumes/influxdb2/etc/influxdb/:/etc/influxdb/
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
    restart: always
    networks:
      - default

  telegraf:
    hostname: telegraf
    # https://hub.docker.com/_/telegraf
    image: "telegraf:1.25"
    volumes:
      # Mount for telegraf configuration
      - ./volumes/telegraf/etc/telegraf/:/etc/telegraf/
      - ./measurements:/measurements/
    links:
      - influxdb2
    depends_on:
      - influxdb2
    environment:
      - INFLUX_TOKEN=${INFLUXDB2_TOKEN}
    restart: always
    networks:
      - default

  grafana:
    hostname: grafana
    # https://hub.docker.com/r/grafana/grafana
    image: "grafana/grafana:9.3.6"
    volumes:
      # Mount for grafana configuration
      - ./volumes/grafana/etc/grafana/:/etc/grafana/
      - ./volumes/grafana/var/lib/grafana/:/var/lib/grafana/
    environment:
      - GF_SECURITY_ADMIN_USER=${INFLUXDB2_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${INFLUXDB2_PASSWORD}
      - GF_INSTALL_PLUGINS=marcusolsson-hourly-heatmap-panel
    links:
      - influxdb2
    depends_on:
      - influxdb2
    ports:
      - "3000:3000"
    user: "0"
    restart: always
    networks:
      - default

# "docker compose" on my ubuntu 20.04 seems to not declare default options.
#   This is needed... unclear why
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: "1450"
      com.docker.network.bridge.default_bridge: "true"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "docker0"
      com.docker.network.driver.mtu: "1500"
